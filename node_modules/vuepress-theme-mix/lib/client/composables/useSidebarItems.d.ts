import type { ComputedRef, InjectionKey } from 'vue';
import type { MixThemeData, MixThemeNormalPageFrontmatter, ResolvedSidebarItem, SidebarConfigArray, SidebarCongfigObject } from '../../shared';
export declare type SidebarItemsRef = ComputedRef<ResolvedSidebarItem[]>;
export declare const sidebarItemsSymbol: InjectionKey<SidebarItemsRef>;
/**
 * Inject sidebar items global computed
 */
export declare const useSidebarItems: () => SidebarItemsRef;
/**
 * Resolve sidebar items global computed
 *
 * It should only be resolved and provided once
 */
export declare const resolveSidebarItems: (frontmatter: MixThemeNormalPageFrontmatter, themeLocale: MixThemeData) => ResolvedSidebarItem[];
/**
 * Resolve sidebar items if the config is an array
 */
export declare const resolveArraySidebarItems: (sidebarConfig: SidebarConfigArray, topPrefix?: string) => ResolvedSidebarItem[];
/**
 * Resolve sidebar items if the config is a key -> value (path-prefix -> array) object
 */
export declare const resolveMultiSidebarItems: (sidebarConfig: SidebarCongfigObject) => ResolvedSidebarItem[];
//# sourceMappingURL=useSidebarItems.d.ts.map